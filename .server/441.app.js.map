{"version":3,"file":"441.app.js","mappings":";;;;;;;;;;;;;;;;;;;;;;EAAA;IAAA;;IAAA,8CAM8C,gBAAU;;IANxD,8CAO8C,gBAAU;;IAPxD,kCAYO,KAAG,EAAE,gBAAU;;IAZtB,kCAaO,aAAW,EAAE,gBAAU;;IAb9B,mCAY2D,WAAK;;IAZhE,mCAeqD,gBAAU;;IAf/D,kCAmBO,KAAG,EAAE,gBAAU;;IAnBtB,mCAkBe,YAAM;;;;;;AElBrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqqBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzcgE;;AAEhE,4EAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,SAAS;AAC/B,QAAQ;AACR,sBAAsB,SAAS;AAC/B;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,CAAC,EAAC;;;AC7CyN;;;;;;;;AEAjI;AACzB;AACL;;AAE5D,CAAqF;;AAE2B;AAChH,iCAAiC,+BAAe,CAAC,qCAAM,gBAAgB,SAAS;;AAEhF,qDAAe;;;;;;;;;;;ACTf;AACgH;AACjB;AAC/F,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA,8DAA8D,SAAS,wBAAwB,WAAW,aAAa,aAAa,cAAc,sBAAsB,sBAAsB,kBAAkB,eAAe,YAAY,8BAA8B,qBAAqB,UAAU,sBAAsB,aAAa,2BAA2B,iBAAiB,eAAe,kBAAkB,iBAAiB,yBAAyB,gBAAgB,gEAAgE,yBAAyB,WAAW,8BAA8B,WAAW,aAAa,SAAS,kBAAkB,eAAe,OAAO,kdAAkd,iBAAiB,GAAG,sBAAsB,gBAAgB,kBAAkB,kBAAkB,mBAAmB,2BAA2B,2BAA2B,uBAAuB,oBAAoB,iBAAiB,GAAG,gBAAgB,0BAA0B,kBAAkB,GAAG,UAAU,kBAAkB,4BAA4B,KAAK,aAAa,sBAAsB,oBAAoB,uBAAuB,sBAAsB,8BAA8B,qBAAqB,GAAG,oBAAoB,8BAA8B,gBAAgB,GAAG,kBAAkB,gBAAgB,kBAAkB,8BAA8B,gBAAgB,iBAAiB,uBAAuB,oBAAoB,GAAG,qBAAqB;AACt2D;AACA,sEAAe,uEAAuB,IAAC;;;;;;;;;ACP1B;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://kz321/./docs/.vuepress/components/WordConversion.vue","webpack://kz321/./docs/.vuepress/components/WordConversion.vue?5813","webpack://kz321/./docs/.vuepress/components/utils/WordConversion.js","webpack://kz321/./docs/.vuepress/components/WordConversion.vue?7da5","webpack://kz321/./docs/.vuepress/components/WordConversion.vue?1c58","webpack://kz321/./docs/.vuepress/components/WordConversion.vue?2e03","webpack://kz321/./docs/.vuepress/components/WordConversion.vue?b16a","webpack://kz321/./docs/.vuepress/components/WordConversion.vue?739d","webpack://kz321/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["\n  <div>\n    <!-- 写一个textare 和转换按钮-->\n     <h2>文字转换工具</h2>\n     <!-- tab选择器: 内容是 tote转西里尔 ，西里尔转tote -->\n    <div class=\"tab\">\n      <div class=\"tab-item\" :class=\"{ active: currentTab === 'tote' }\" @click=\"currentTab = 'tote'\">传统文转西里尔文</div>\n      <div class=\"tab-item\" :class=\"{ active: currentTab === 'cyrillic' }\" @click=\"currentTab = 'cyrillic'\">西里尔文转传统文</div>\n    </div>\n  \n    <textarea \n      class=\"input\" \n      :dir=\"currentTab == 'tote' ? 'rtl' : 'ltr'\" v-model=\"input\"\n      :placeholder=\"currentTab == 'tote' ? 'ءماتىندى وسى اراعا جاپسىرىڭىز نەمەسە جازىڭىز ' : 'мәтінді осы араға жапсырыңыз немесе жазыңыз '\"\n    />\n    <button class=\"main-button\" @click=\"reshaper\">{{ buttonText }}</button>\n    <textarea \n      class=\"input\"\n      v-model=\"result\"\n      :dir=\"currentTab == 'tote' ? 'ltr' : 'rtl'\"\n    />\n  </div>\n","export * from \"-!../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./WordConversion.vue?vue&type=template&id=36097bdd&scoped=true\"","const toteChars = [\"ا\", \"ءا\", \"ب\", \"ۆ\", \"گ\", \"ع\", \"د\", \"ە\", \"ج\", \"ز\", \"ي\", \"ك\", \"ق\", \"ل\", \"م\", \"ن\", \"ڭ\", \"و\", \"ءو\", \"پ\", \"ر\", \"س\", \"ت\", \"ۋ\", \"ۇ\", \"ءۇ\", \"ف\", \"ح\", \"ھ\", \"چ\", \"ش\", \"ى\", \"ءى\", \"،\", \"؟\", \"؛\",  \"ء\"];\n\n// 将 tote 单词转换为西里尔文\nfunction ToteWordToCyrl(toteWord) {\n    // 如果单词中有 \"ك\" 和 \"گ\" 和  \"ە\" 等字母或单词以 \"ء\" 开头，删除 \"ء\" 将单词内的 \"ا\" 替换为 \"ءا\" 将 \"و\" 替换为 \"ءو\" 将 \"ى\" 替换为 \"ءى\" 将 \"ۇ\" 替换为 \"ءۇ\"\n    if(toteWord[0] === \"ء\"||  toteWord.includes(\"ك\") || toteWord.includes(\"گ\") || toteWord.includes(\"ە\")) {\n        toteWord = toteWord.replace(/ا/g, \"ءا\");\n        toteWord = toteWord.replace(/و/g, \"ءو\");\n        toteWord = toteWord.replace(/ى/g, \"ءى\");\n        toteWord = toteWord.replace(/ۇ/g, \"ءۇ\");\n    }\n\n    const toteWordLength = toteWord.length;\n\n    const cyrlCharsArr = [];\n    let j = 0;\n    while (j < toteWordLength) {\n        if (j + 1 < toteWordLength) {\n            const twoCharKey = toteWord[j] + toteWord[j + 1];\n            switch (twoCharKey) {\n                case  \"ءا\":\n                    cyrlCharsArr.push(\"ә\");\n                    j += 2;\n                    break;\n                case \"ءو\":\n                    cyrlCharsArr.push(\"ө\");\n                    j += 2;\n                    break;\n                case \"ءى\":\n                    cyrlCharsArr.push(\"і\");\n                    j += 2;\n                    break;\n                case \"ءۇ\":\n                    cyrlCharsArr.push(\"ү\");\n                    j += 2;\n                    break;\n                case \"يا\":\n                    cyrlCharsArr.push(\"я\");\n                    j += 2;\n                    continue;\n                case \"ييا\":\n                    cyrlCharsArr.push(\"йя\");\n                    j += 3;\n                    continue;\n                case \"يۋ\":\n                    cyrlCharsArr.push(\"ю\");\n                    j += 2;\n                    continue;\n                case \"شش\":\n                    cyrlCharsArr.push(\"щ\");\n                    j += 2;\n                    continue;\n            }\n        }\n        switch (toteWord[j]) {\n            case \"ء\":\n                cyrlCharsArr.push(\"\");\n                break;\n            case \"ا\":\n                cyrlCharsArr.push(\"а\");\n                break;\n            case \"ب\":\n                cyrlCharsArr.push(\"б\");\n                break;\n            case \"ۆ\":\n                cyrlCharsArr.push(\"в\");\n                break;\n            case \"گ\":\n                cyrlCharsArr.push(\"г\");\n                break;\n            case \"ع\":\n                cyrlCharsArr.push(\"ғ\");\n                break;\n            case \"د\":\n                cyrlCharsArr.push(\"д\");\n                break;\n            case \"ە\":\n                cyrlCharsArr.push(\"е\");\n                break;\n            case \"ج\":\n                cyrlCharsArr.push(\"ж\");\n                break;\n            case \"ز\":\n                cyrlCharsArr.push(\"з\");\n                break;\n            case \"ي\":\n                cyrlCharsArr.push(\"й\");\n                break;\n            case \"ك\":\n                cyrlCharsArr.push(\"к\");\n                break;\n            case \"ق\":\n                cyrlCharsArr.push(\"қ\");\n                break;\n            case \"ل\":\n                cyrlCharsArr.push(\"л\");\n                break;\n            case \"م\":\n                cyrlCharsArr.push(\"м\");\n                break;\n            case \"ن\":\n                cyrlCharsArr.push(\"н\");\n                break;\n            case \"ڭ\":\n                cyrlCharsArr.push(\"ң\");\n                break;\n            case \"و\":\n                cyrlCharsArr.push(\"о\");\n                break;\n            case \"پ\":\n                cyrlCharsArr.push(\"п\");\n                break;\n            case \"ر\":\n                cyrlCharsArr.push(\"р\");\n                break;\n            case \"س\":\n                cyrlCharsArr.push(\"с\");\n                break;\n            case \"ت\":\n                cyrlCharsArr.push(\"т\");\n                break;\n            case \"ۋ\":\n                cyrlCharsArr.push(\"у\");\n                break;\n            case \"ۇ\":\n                cyrlCharsArr.push(\"ұ\");\n                break;\n            case \"ف\":\n                cyrlCharsArr.push(\"ф\");\n                break;\n            case \"ح\":\n                cyrlCharsArr.push(\"х\");\n                break;\n            case \"ھ\":\n                cyrlCharsArr.push(\"Һ\");\n                break;\n            case \"چ\":\n                cyrlCharsArr.push(\"ч\");\n                break;\n            case \"ش\":\n                cyrlCharsArr.push(\"ш\");\n                break;\n            case \"ى\":\n                cyrlCharsArr.push(\"ы\");\n                break;\n            case \"،\":\n                cyrlCharsArr.push(\",\");\n                break;\n            case \"؟\":\n                cyrlCharsArr.push(\"?\");\n                break;\n            case \"؛\":\n                cyrlCharsArr.push(\";\");\n                break;\n            default:\n                cyrlCharsArr.push(toteWord[j]);\n                break;\n        }\n        j++;\n    }\n    return cyrlCharsArr.join('');\n}\n\n// 将 tote 文字转换为西里尔文\nexport function Tote2Cyrl(toteText) {\n    toteText += \".\";\n    const inputToteChars = toteText.split('');\n    const length = inputToteChars.length;\n    const cyrlStrs = new Array(length);\n    let toteWord = '';\n    for (let i = 0; i < length; i++) {\n        const currentChar = inputToteChars[i];\n        if (!toteChars.includes(currentChar)) {\n            if (toteWord.length > 0) {\n                const cyrlWord = ToteWordToCyrl(toteWord);\n                cyrlStrs[i - toteWord.length] = cyrlWord;\n                toteWord = '';\n            }\n            if(currentChar) {\n                cyrlStrs[i] = currentChar;\n            }\n            continue;\n        }\n        toteWord += currentChar;\n    }\n    cyrlStrs.pop();\n    return cyrlStrs.join('');\n}\n\n// ========== \n// 定义 Sound 枚举\nconst Sound = {\n  Vowel: 'Vowel', // Дауысты дыбыс\n  Consonant: 'Consonant', // Дауыссыз дыбыс\n  Unknown: 'Unknown' // Белгісіз\n};\n\n// 定义西里尔字符数组\nconst cyrlChars = [\"А\", \"Ә\", \"Ə\", \"Б\", \"В\", \"Г\", \"Ғ\", \"Д\", \"Е\", \"Ё\", \"Ж\", \"З\", \"И\", \"Й\", \"К\", \"Қ\", \"Л\", \"М\", \"Н\", \"Ң\", \"О\", \"Ө\", \"Ɵ\", \"П\", \"Р\", \"С\", \"Т\", \"У\", \"Ұ\", \"Ү\", \"Ф\", \"Х\", \"Һ\", \"Ц\", \"Ч\", \"Ш\", \"Щ\", \"Ъ\", \"Ы\", \"І\", \"Ь\", \"Э\", \"Ю\", \"Я\", \"-\"];\n\n// 定义方言词字典\nconst dialectWordsDic = {\n  \"قر\": \"ق ر\",\n  \"جحر\": \"ج ح ر\",\n  \"جشس\": \"ج ش س\",\n  \"شۇار\": \"ش ۇ ا ر\",\n  \"باق\": \"ب ا ق\",\n  \"ءباسپاسوز\": \"باسپا ءسوز\",\n  \"قىتاي\": \"جۇڭگو\"\n};\n\n// 将仿西里尔字符转换为原始西里尔字符\nfunction CopycatCyrlToOriginalCyrl(cyrlText) {\n  return cyrlText\n      .replace(/Ə/g, \"Ә\")\n      .replace(/ə/g, \"ә\")\n      .replace(/Ɵ/g, \"Ө\")\n      .replace(/ɵ/g, \"ө\");\n}\n\n// 替换方言词\nfunction ReplaceDialectWords(word) {\n  if (dialectWordsDic.hasOwnProperty(word)) {\n      return dialectWordsDic[word];\n  }\n  word = word.replace(/\\w(ۇلى)\\s|\\w(ۇلى$)/g, (match) => match.replace(\"ۇلى\", \" ۇلى\"));\n  word = word.replace(/\\w(ۇلىنىڭ)\\s|\\w(ۇلىنىڭ$)/g, (match) => match.replace(\"ۇلىنىڭ\", \" ۇلىنىڭ\"));\n  word = word.replace(/\\w(قىزى)\\s|\\w(قىزى$)/g, (match) => match.replace(\"قىزى\", \" قىزى\"));\n  word = word.replace(/\\w(قىزىنىڭ)\\s|\\w(قىزىنىڭ$)/g, (match) => match.replace(\"قىزىنىڭ\", \" قىزىنىڭ\"));\n  word = word.replace(/\\w(ەۆ)\\s|\\w(ەۆ)/g, (match) => match.replace(\"ەۆ\", \"يەۆ\"));\n  return word;\n}\n// HtmlDecode\nfunction htmlDecode(input) {\nconst doc = new DOMParser().parseFromString(input, \"text/html\");\nreturn doc.documentElement.textContent;\n}\n\n// 将西里尔文转换为 tote 文字\nexport function Cyrl2Tote(cyrlText) {\n  cyrlText = CopycatCyrlToOriginalCyrl(cyrlText);\n  cyrlText += \".\";\n  cyrlText = htmlDecode(cyrlText);\n  const chars = cyrlText.split('');\n  const length = chars.length;\n  const toteStrs = new Array(length);\n  let prevSound = Sound.Unknown;\n  let cyrlWord = '';\n\n  for (let i = 0; i < length; i++) {\n      if (!cyrlChars.includes(chars[i].toUpperCase())) {\n          if (cyrlWord.length > 0) {\n              const wordLength = cyrlWord.length;\n              const toteChars = new Array(wordLength);\n              let j = i - wordLength;\n              let tIndex = 0;\n              for (; j < i; j++, tIndex++) {\n                  if (j + 1 < length) {\n                      const key = chars[j] + chars[j + 1];\n                      switch (key.toLowerCase()) {\n                          case \"ия\":\n                              toteChars[tIndex] = \"يا\";\n                              j++;\n                              continue;\n                          case \"йя\":\n                              toteChars[tIndex] = \"ييا\";\n                              j++;\n                              continue;\n                          case \"ию\":\n                              toteChars[tIndex] = \"يۋ\";\n                              j++;\n                              continue;\n                          case \"йю\":\n                              toteChars[tIndex] = \"يۋ\";\n                              j++;\n                              continue;\n                          case \"сц\":\n                              toteChars[tIndex] = \"س\";\n                              j++;\n                              continue;\n                          case \"тч\":\n                              toteChars[tIndex] = \"چ\";\n                              j++;\n                              continue;\n                          case \"ий\":\n                              toteChars[tIndex] = \"ي\";\n                              j++;\n                              continue;\n                          case \"ХХ\":\n                              toteChars[tIndex] = \"ХХ\";\n                              j++;\n                              continue;\n                      }\n                  }\n\n                  switch (chars[j].toLowerCase()) {\n                      case \"я\":\n                          toteChars[tIndex] = prevSound === Sound.Consonant ? \"ءا\" : \"يا\";\n                          break;\n                      case \"ю\":\n                          toteChars[tIndex] = prevSound === Sound.Consonant ? \"ءۇ\" : \"يۋ\";\n                          break;\n                      case \"щ\":\n                          toteChars[tIndex] = \"شش\";\n                          break;\n                      case \"э\":\n                          toteChars[tIndex] = \"ە\";\n                          break;\n                      case \"а\":\n                          toteChars[tIndex] = \"ا\";\n                          break;\n                      case \"б\":\n                          toteChars[tIndex] = \"ب\";\n                          break;\n                      case \"ц\":\n                          toteChars[tIndex] = \"س\";\n                          break;\n                      case \"д\":\n                          toteChars[tIndex] = \"د\";\n                          break;\n                      case \"е\":\n                          toteChars[tIndex] = \"ە\";\n                          break;\n                      case \"ф\":\n                          toteChars[tIndex] = \"ف\";\n                          break;\n                      case \"г\":\n                          toteChars[tIndex] = \"گ\";\n                          break;\n                      case \"х\":\n                          toteChars[tIndex] = \"ح\";\n                          break;\n                      case \"Һ\":\n                      case \"һ\":\n                          toteChars[tIndex] = \"ھ\";\n                          break;\n                      case \"І\":\n                      case \"і\":\n                          toteChars[tIndex] = \"ءى\";\n                          break;\n                      case \"и\":\n                      case \"й\":\n                          toteChars[tIndex] = \"ي\";\n                          break;\n                      case \"к\":\n                          toteChars[tIndex] = \"ك\";\n                          break;\n                      case \"л\":\n                          toteChars[tIndex] = \"ل\";\n                          break;\n                      case \"м\":\n                          toteChars[tIndex] = \"م\";\n                          break;\n                      case \"н\":\n                          toteChars[tIndex] = \"ن\";\n                          break;\n                      case \"о\":\n                          toteChars[tIndex] = \"و\";\n                          break;\n                      case \"п\":\n                          toteChars[tIndex] = \"پ\";\n                          break;\n                      case \"қ\":\n                          toteChars[tIndex] = \"ق\";\n                          break;\n                      case \"р\":\n                          toteChars[tIndex] = \"ر\";\n                          break;\n                      case \"с\":\n                          toteChars[tIndex] = \"س\";\n                          break;\n                      case \"т\":\n                          toteChars[tIndex] = \"ت\";\n                          break;\n                      case \"ұ\":\n                          toteChars[tIndex] = \"ۇ\";\n                          break;\n                      case \"в\":\n                          toteChars[tIndex] = \"ۆ\";\n                          break;\n                      case \"у\":\n                          toteChars[tIndex] = \"ۋ\";\n                          break;\n                      case \"ы\":\n                          toteChars[tIndex] = \"ى\";\n                          break;\n                      case \"з\":\n                          toteChars[tIndex] = \"ز\";\n                          break;\n                      case \"ә\":\n                          toteChars[tIndex] = \"ءا\";\n                          break;\n                      case \"ё\":\n                      case \"ө\":\n                          toteChars[tIndex] = \"ءو\";\n                          break;\n                      case \"ү\":\n                          toteChars[tIndex] = \"ءۇ\";\n                          break;\n                      case \"ч\":\n                          toteChars[tIndex] = \"چ\";\n                          break;\n                      case \"ғ\":\n                          toteChars[tIndex] = \"ع\";\n                          break;\n                      case \"ш\":\n                          toteChars[tIndex] = \"ش\";\n                          break;\n                      case \"ж\":\n                          toteChars[tIndex] = \"ج\";\n                          break;\n                      case \"ң\":\n                          toteChars[tIndex] = \"ڭ\";\n                          break;\n                      case \"ь\":\n                      case \"Ь\":\n                      case \"ъ\":\n                      case \"Ъ\":\n                      case \"¬\":\n                          toteChars[tIndex] = \"\";\n                          break;\n                      default:\n                          toteChars[tIndex] = chars[j] || \"\";\n                          break;\n                  }\n              }\n              let toteWord = toteChars.join('');\n              if (toteWord.includes(\"ء\")) {\n                  toteWord = toteWord.replace(/ء/g, \"\");\n                  if (!toteWord.includes(\"ك\") && !toteWord.includes(\"گ\") && !toteWord.includes(\"ە\")) {\n                      toteWord = \"ء\" + toteWord;\n                  }\n              }\n              toteWord = ReplaceDialectWords(toteWord);\n              toteStrs[i - wordLength] = toteWord;\n              cyrlWord = '';\n          }\n          switch (chars[i]) {\n              case \",\":\n                  toteStrs[i] = \"،\";\n                  break;\n              case \"?\":\n                  toteStrs[i] = \"؟\";\n                  break;\n              case \";\":\n                  toteStrs[i] = \"؛\";\n                  break;\n              default:\n                  toteStrs[i] = chars[i];\n                  break;\n          }\n          prevSound = Sound.Unknown;\n          continue;\n      }\n      cyrlWord += chars[i];\n      prevSound = Sound.Unknown;\n  }\n  toteStrs[length - 1] = \"\";\n  return toteStrs.join('');\n}","\n\nimport { Tote2Cyrl, Cyrl2Tote } from \"./utils/WordConversion.js\"\n\nexport default {\n  name: \"WordSplit\",\n  data() {\n    return {\n      input: \"\",\n      Tote2cry: \"传统文转西里尔文\",\n      currentTab: \"\", // 当前选中的tab\n      buttonText: \"转换\",\n      result: \"\",\n    };\n  },\n  mounted() {\n    const savedTab = localStorage.getItem(\"currentTab\");\n    this.currentTab = savedTab || \"tote\";\n  },\n  watch: {\n    currentTab(newTab) {\n      localStorage.setItem(\"currentTab\", newTab);\n      this.input = \"\";\n      this.result = \"\";\n    }\n  },\n  methods: {\n    reshaper() {\n      // 搜索功能\n      if (this.input.trim() == \"\") return;\n\n      if(this.currentTab == 'tote') {\n        this.result = Tote2Cyrl(this.input);\n      } else {\n        this.result = Cyrl2Tote(this.input);\n      }\n\n      navigator.clipboard.writeText(this.result || '');\n\n      this.buttonText = \"已添加到剪切板\";\n      setTimeout(() => {\n        this.buttonText = \"转换\";\n      }, 2000);\n     }\n  }\n};\n","export { default } from \"-!../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./WordConversion.vue?vue&type=script&lang=js\"; export * from \"-!../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./WordConversion.vue?vue&type=script&lang=js\"","export * from \"-!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-34.use[0]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-34.use[1]!../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./WordConversion.vue?vue&type=style&index=0&id=36097bdd&scoped=true&lang=css\"","import { ssrRender } from \"./WordConversion.vue?vue&type=template&id=36097bdd&scoped=true\"\nimport script from \"./WordConversion.vue?vue&type=script&lang=js\"\nexport * from \"./WordConversion.vue?vue&type=script&lang=js\"\n\nimport \"./WordConversion.vue?vue&type=style&index=0&id=36097bdd&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/eli/code/github/kz321-vuepress/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender],['__scopeId',\"data-v-36097bdd\"]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"h2[data-v-36097bdd]{border:0}.input[data-v-36097bdd]{width:100%;height:200px;padding:10px;margin:10px 0;box-sizing:border-box;border:1px solid #ccc;border-radius:5px;font-size:16px;resize:none}.input[data-v-36097bdd]:focus{border-color:#409eff;outline:0}.tab[data-v-36097bdd]{display:flex}.tab-item[data-v-36097bdd]{padding:6px 10px;cursor:pointer;border-radius:5px;margin-right:5px;border:1px solid #f0f0f0;font-weight:600}.main-button[data-v-36097bdd],.tab-item.active[data-v-36097bdd]{background-color:#409eff;color:#fff}.main-button[data-v-36097bdd]{width:100%;padding:10px;border:0;border-radius:5px;cursor:pointer}\", \"\",{\"version\":3,\"sources\":[\"webpack://./docs/.vuepress/components/WordConversion.vue\"],\"names\":[],\"mappings\":\"AAEA,oBACE,QACF,CAGA,wBACE,UAAW,CACX,YAAa,CACb,YAAa,CACb,aAAc,CACd,qBAAsB,CACtB,qBAAsB,CACtB,iBAAkB,CAClB,cAAe,CACf,WACF,CACA,8BACE,oBAAqB,CACrB,SACF,CAEA,sBACE,YAEF,CACA,2BACE,gBAAiB,CACjB,cAAe,CACf,iBAAkB,CAClB,gBAAiB,CACjB,wBAAyB,CACzB,eACF,CACA,gEACE,wBAAyB,CACzB,UACF,CAEA,8BACE,UAAW,CACX,YAAa,CAGb,QAAY,CACZ,iBAAkB,CAClB,cACF\",\"sourcesContent\":[\"\\n\\nh2 {\\n  border: none;\\n}\\n\\n/* 样式 */\\n.input {\\n  width: 100%;\\n  height: 200px;\\n  padding: 10px;\\n  margin: 10px 0;\\n  box-sizing: border-box;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  resize: none;\\n}\\n.input:focus {\\n  border-color: #409eff;\\n  outline: none;\\n}\\n\\n.tab {\\n  display: flex;\\n  /* margin-bottom: 20px; */\\n}\\n.tab-item {\\n  padding: 6px 10px;\\n  cursor: pointer;\\n  border-radius: 5px;\\n  margin-right: 5px;\\n  border: 1px solid #f0f0f0;\\n  font-weight: 600;\\n}\\n.tab-item.active {\\n  background-color: #409eff;\\n  color: #fff;\\n}\\n\\n.main-button {\\n  width: 100%;\\n  padding: 10px;\\n  background-color: #409eff;\\n  color: #fff;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}